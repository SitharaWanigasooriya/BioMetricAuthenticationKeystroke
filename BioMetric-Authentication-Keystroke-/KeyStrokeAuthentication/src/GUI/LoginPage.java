/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import keystroke.keys;
import keystroke.sqliteConnection;

/**
 *
 * @author Sithara wanigasooriy
 */
public class LoginPage extends javax.swing.JFrame implements ActionListener, KeyListener{
    Connection connectionLogin = null;
    private ArrayList<keys> currentKeyObjects = new ArrayList();
    private ArrayList currentCalcKeyDetails = new ArrayList();
    private int noOfMatches=0;
    private String DEVvalues;
    private String MENvalues;
    
    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        setMinimumSize(new Dimension (700,500));
        initComponents();
        this.LoginTxtCapture.addKeyListener(this);
        connectionLogin = sqliteConnection.dbConnector();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LoginReset = new javax.swing.JButton();
        LoginLogin = new javax.swing.JButton();
        LoginHome = new javax.swing.JButton();
        LoginExit = new javax.swing.JButton();
        LoginTxtCapture = new javax.swing.JTextField();
        LoginAuthenticationTxt = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        LoginLabel = new javax.swing.JLabel();
        UserNameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        UserNameTxt = new javax.swing.JTextField();
        PasswordTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(300, 100));
        getContentPane().setLayout(null);

        LoginReset.setText("Reset");
        LoginReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginResetActionPerformed(evt);
            }
        });
        getContentPane().add(LoginReset);
        LoginReset.setBounds(490, 380, 90, 32);

        LoginLogin.setText("Login");
        LoginLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginLoginActionPerformed(evt);
            }
        });
        getContentPane().add(LoginLogin);
        LoginLogin.setBounds(390, 380, 90, 32);

        LoginHome.setText("Home");
        LoginHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginHomeActionPerformed(evt);
            }
        });
        getContentPane().add(LoginHome);
        LoginHome.setBounds(290, 380, 90, 32);

        LoginExit.setText("Exit");
        LoginExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginExitActionPerformed(evt);
            }
        });
        getContentPane().add(LoginExit);
        LoginExit.setBounds(590, 380, 90, 32);

        LoginTxtCapture.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        LoginTxtCapture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginTxtCaptureActionPerformed(evt);
            }
        });
        getContentPane().add(LoginTxtCapture);
        LoginTxtCapture.setBounds(50, 280, 590, 41);

        LoginAuthenticationTxt.setBackground(new java.awt.Color(255, 204, 204));
        LoginAuthenticationTxt.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        LoginAuthenticationTxt.setForeground(new java.awt.Color(0, 0, 0));
        LoginAuthenticationTxt.setText("keystroke phrase");
        getContentPane().add(LoginAuthenticationTxt);
        LoginAuthenticationTxt.setBounds(270, 240, 161, 24);

        jLabel1.setFont(new java.awt.Font("Bradley Hand ITC", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 204));
        jLabel1.setText("Enter following phrase");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(250, 200, 213, 24);

        LoginLabel.setFont(new java.awt.Font("Castellar", 1, 36)); // NOI18N
        LoginLabel.setForeground(new java.awt.Color(0, 0, 0));
        LoginLabel.setText("Login");
        getContentPane().add(LoginLabel);
        LoginLabel.setBounds(41, 41, 140, 43);

        UserNameLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        UserNameLabel.setForeground(new java.awt.Color(0, 0, 204));
        UserNameLabel.setText("User Name");
        getContentPane().add(UserNameLabel);
        UserNameLabel.setBounds(120, 100, 97, 24);

        PasswordLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        PasswordLabel.setForeground(new java.awt.Color(0, 0, 255));
        PasswordLabel.setText("Password");
        getContentPane().add(PasswordLabel);
        PasswordLabel.setBounds(120, 140, 86, 24);

        UserNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameTxtActionPerformed(evt);
            }
        });
        getContentPane().add(UserNameTxt);
        UserNameTxt.setBounds(270, 96, 248, 30);
        getContentPane().add(PasswordTxt);
        PasswordTxt.setBounds(270, 140, 248, 30);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/login-image_Resized.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 690, 450);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginLoginActionPerformed
        if(isValidUserName()){
            if(isValidPassword()){
                if(isValidPhrase()){
                    for (int i=0;i<currentKeyObjects.size()-2;i++){
                        //Assume there  can not be zero delay between the key pressing
                        if (currentKeyObjects.get(i+1).getReleasingTime()-currentKeyObjects.get(i).getPressingTime()!=0){
                            currentCalcKeyDetails.add(currentKeyObjects.get(i+1).getReleasingTime()- currentKeyObjects.get(i).getPressingTime());
                        }
                        if (currentKeyObjects.get(i+2).getPressingTime()-currentKeyObjects.get(i+1).getReleasingTime()!=0){
                            currentCalcKeyDetails.add(currentKeyObjects.get(i+2).getPressingTime()-currentKeyObjects.get(i+1).getReleasingTime());
                        }
                    }
                    currentCalcKeyDetails.add(currentKeyObjects.get(currentKeyObjects.size()-1).getReleasingTime()-currentKeyObjects.get(currentKeyObjects.size()-2).getPressingTime());
                    ///DataBase Accesses

                    try {
                        String sqlGetDetailsQuery = "select deviationValues,meanValues from users where userName=? and password=?";
                        PreparedStatement pst = connectionLogin.prepareStatement(sqlGetDetailsQuery);

                        pst.setString(1,UserNameTxt.getText());
                        pst.setString(2,PasswordTxt.getText());
                        ResultSet result = pst.executeQuery();    
                        
                        while(result.next()){
                            DEVvalues= result.getString("deviationValues");
                            MENvalues = result.getString("meanValues");
                        }
                        result.close();
                        pst.close();

                    } catch (Exception e) {JOptionPane.showMessageDialog(null, e);}

                    if(DEVvalues==null && MENvalues==null){
                        JOptionPane.showMessageDialog(null,"Unvalid user","ERROR",JOptionPane.ERROR_MESSAGE);
                        new LoginPage().setVisible(true);
                        this.setVisible(false);
                        currentCalcKeyDetails = new ArrayList();
                        currentKeyObjects = new ArrayList();
                        noOfMatches=0;
                    }
                    else {
                        //Consider the string that fetch from the data base is DEVValues
                        DEVvalues=DEVvalues.substring(0, DEVvalues.length()-1);
                        String[] DEVvalueslist = DEVvalues.split(",");

                        MENvalues=MENvalues.substring(0, MENvalues.length()-1);
                        String[] MENvalueslist = MENvalues.split(",");
                        
                        System.out.println(DEVvalueslist.length);

                        for (int i=0;i<DEVvalueslist.length;i++){
                            if (Double.parseDouble(currentCalcKeyDetails.get(i).toString())< Double.parseDouble(MENvalueslist[i])+Double.parseDouble(DEVvalueslist[i]) && Double.parseDouble(currentCalcKeyDetails.get(i).toString())> Double.parseDouble(MENvalueslist[i])-Double.parseDouble(DEVvalueslist[i])){
                                noOfMatches++;
                            } 
                           
                        }
                        
                        float matches = noOfMatches;
                        System.out.println(matches+" matches out of "+ currentCalcKeyDetails.size());
                        System.out.println("Similarity  "+matches/currentCalcKeyDetails.size());
                        
                        if ((matches/currentCalcKeyDetails.size())>=0.75){
                            JOptionPane.showMessageDialog(null, "Successfully LoggedIn \nUser matches "+ matches/currentCalcKeyDetails.size());
                            new FirstPage().setVisible(true);
                            this.setVisible(false);
                        }
                        else{JOptionPane.showMessageDialog(null, "Not Successful\n User matches "+ matches/currentCalcKeyDetails.size(),"???",JOptionPane.ERROR_MESSAGE);
                            new FirstPage().setVisible(true);
                            this.setVisible(false);
                        }
                        }
                }else{JOptionPane.showMessageDialog(null, "Enter Given phrase");
                    new LoginPage().setVisible(true);
                    this.setVisible(false);
                    currentCalcKeyDetails = new ArrayList();
                    currentKeyObjects = new ArrayList();
                    noOfMatches=0;                    
                }
            }else{JOptionPane.showMessageDialog(null, "Enter Valid Password");
                new LoginPage().setVisible(true);
                this.setVisible(false);
                currentCalcKeyDetails = new ArrayList();
                currentKeyObjects = new ArrayList();
                noOfMatches=0;
                            
            }
        }else{
            JOptionPane.showMessageDialog(null, "Enter Valid User Name");
            new LoginPage().setVisible(true);
            this.setVisible(false);
            currentCalcKeyDetails = new ArrayList();
            currentKeyObjects = new ArrayList();
            noOfMatches=0;
            }      
    }//GEN-LAST:event_LoginLoginActionPerformed

    private void LoginHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginHomeActionPerformed
        new FirstPage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_LoginHomeActionPerformed

    private void LoginTxtCaptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginTxtCaptureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginTxtCaptureActionPerformed

    private void LoginResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginResetActionPerformed
        new LoginPage().setVisible(true);
        this.setVisible(false);
        currentCalcKeyDetails = new ArrayList();
        currentKeyObjects = new ArrayList();
        noOfMatches=0;
        
    }//GEN-LAST:event_LoginResetActionPerformed

    private void LoginExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_LoginExitActionPerformed

    private void UserNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNameTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LoginAuthenticationTxt;
    private javax.swing.JButton LoginExit;
    private javax.swing.JButton LoginHome;
    private javax.swing.JLabel LoginLabel;
    private javax.swing.JButton LoginLogin;
    private javax.swing.JButton LoginReset;
    private javax.swing.JTextField LoginTxtCapture;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JTextField PasswordTxt;
    private javax.swing.JLabel UserNameLabel;
    private javax.swing.JTextField UserNameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyTyped(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        if (e.getKeyCode()!= 8 && e.getKeyCode()!=46){
                    
            if (e.getSource() == this.LoginTxtCapture){
                keys kee = new keys (e.getKeyChar());
                kee.setPressingTime(e.getWhen());
                currentKeyObjects.add(kee);
                System.out.println(kee+" "+e.getKeyChar()+"  press  "+e.getWhen());
            }
        }
        else if(e.getKeyCode()== 8 || e.getKeyCode()==46 ){
            JOptionPane.showMessageDialog(null, "Not valid");
            currentKeyObjects= new ArrayList();  
            new LoginPage();
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        if (e.getSource()== this.LoginTxtCapture){
            keys kee = new keys (e.getKeyChar());
            kee.setReleasingTime(e.getWhen());
            currentKeyObjects.add(kee);
            System.out.println(kee+" "+ e.getKeyChar()+"  release   "+e.getWhen());
        }
    
    }
    private boolean isValidUserName() {
        return this.UserNameTxt.getText() != null && this.UserNameTxt.getText().trim().length() != 0;
    }

    private boolean isValidPassword() {
        return this.PasswordTxt.getText() != null && this.PasswordTxt.getText().trim().length() != 0;
    }

    private boolean isValidPhrase() {
        return this.LoginTxtCapture.getText() != null && this.LoginTxtCapture.getText().trim().length() != 0 && this.LoginTxtCapture.getText().equals(this.LoginAuthenticationTxt.getText());
    }
}
