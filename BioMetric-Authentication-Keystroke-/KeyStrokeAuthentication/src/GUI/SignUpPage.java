/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import keystroke.Digraph;
import keystroke.User;
import keystroke.keys;
import java.sql.*;
import javax.swing.*;
import keystroke.sqliteConnection;

/**
 *
 * @author Sithara wanigasooriy
 */
public class SignUpPage extends javax.swing.JFrame implements ActionListener, KeyListener {

    /**
     * Creates new form SignUpPage
     */
    
    //private ArrayList<keys> signupInitialBothData = null;
    private ArrayList<keys> signupInitialPressData = null;
    private ArrayList<keys> signupInitialReleaseData = null;
    //private static ArrayList<ArrayList<keys>> signupInitialData = new ArrayList();
    private static ArrayList<ArrayList<keys>> allPressingData = new ArrayList();
    private static ArrayList<ArrayList<keys>> allReleasingData = new ArrayList();
    private ArrayList data = new ArrayList();
    private static int noOfAttemps=1;
    private User user;
    private ArrayList<ArrayList> latencies = new ArrayList();
    private ArrayList latenciesFinal = new ArrayList();
    private ArrayList temporary = null;
    private ArrayList<Digraph> digraphCollection = new ArrayList();
    Connection connection = null;
    //private boolean check;
    
    public SignUpPage(User user) {
        initComponents();
        setMinimumSize(new Dimension (700,500));
        this.user=user;
        this.setVisible(true);
        this.SignupTxtCapture.addKeyListener(this);
        signupInitialPressData = new ArrayList();
        signupInitialReleaseData = new ArrayList();
        Status.setText("This is your  "+noOfAttemps+"  attempt out of 5");
        connection = sqliteConnection.dbConnector();
        if (noOfAttemps>1 && noOfAttemps<=5){
            UserNameTxt.setText(user.getUserName());
            PasswordTxt.setText(user.getPassword());
        }
        if(noOfAttemps<6){
            SignupSignup.setEnabled(false);
        }
        
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SignUpLabel = new javax.swing.JLabel();
        SignupUserNameLabel = new javax.swing.JLabel();
        SignupPasswordLabel = new javax.swing.JLabel();
        UserNameTxt = new javax.swing.JTextField();
        PasswordTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        SignupTxtCapture = new javax.swing.JTextField();
        Status = new javax.swing.JLabel();
        SignUpAuthenticationLabel = new javax.swing.JLabel();
        SignupHome = new javax.swing.JButton();
        SignupNext = new javax.swing.JButton();
        SignupSignup = new javax.swing.JButton();
        SignupExit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(300, 100));
        getContentPane().setLayout(null);

        SignUpLabel.setFont(new java.awt.Font("Castellar", 1, 36)); // NOI18N
        SignUpLabel.setForeground(new java.awt.Color(0, 0, 0));
        SignUpLabel.setText("SignUp");
        getContentPane().add(SignUpLabel);
        SignUpLabel.setBounds(27, 23, 177, 34);

        SignupUserNameLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SignupUserNameLabel.setForeground(new java.awt.Color(0, 0, 204));
        SignupUserNameLabel.setText("User Name");
        getContentPane().add(SignupUserNameLabel);
        SignupUserNameLabel.setBounds(90, 70, 97, 28);

        SignupPasswordLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SignupPasswordLabel.setForeground(new java.awt.Color(0, 0, 204));
        SignupPasswordLabel.setText("Password");
        getContentPane().add(SignupPasswordLabel);
        SignupPasswordLabel.setBounds(100, 120, 86, 24);

        UserNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNameTxtActionPerformed(evt);
            }
        });
        getContentPane().add(UserNameTxt);
        UserNameTxt.setBounds(240, 70, 228, 30);

        PasswordTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTxtActionPerformed(evt);
            }
        });
        getContentPane().add(PasswordTxt);
        PasswordTxt.setBounds(240, 120, 228, 30);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("You have to enter the following phrase for five times");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 180, 450, 26);

        SignupTxtCapture.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SignupTxtCapture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignupTxtCaptureActionPerformed(evt);
            }
        });
        SignupTxtCapture.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SignupTxtCaptureKeyPressed(evt);
            }
        });
        getContentPane().add(SignupTxtCapture);
        SignupTxtCapture.setBounds(110, 300, 500, 47);

        Status.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        Status.setForeground(new java.awt.Color(0, 0, 255));
        Status.setText("This is the times that you have attemped");
        getContentPane().add(Status);
        Status.setBounds(210, 220, 332, 24);

        SignUpAuthenticationLabel.setBackground(new java.awt.Color(255, 204, 204));
        SignUpAuthenticationLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        SignUpAuthenticationLabel.setForeground(new java.awt.Color(0, 0, 0));
        SignUpAuthenticationLabel.setText("keystroke phrase");
        getContentPane().add(SignUpAuthenticationLabel);
        SignUpAuthenticationLabel.setBounds(280, 260, 175, 32);

        SignupHome.setText("Home");
        SignupHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignupHomeActionPerformed(evt);
            }
        });
        getContentPane().add(SignupHome);
        SignupHome.setBounds(250, 370, 90, 32);

        SignupNext.setText("Next");
        SignupNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignupNextActionPerformed(evt);
            }
        });
        getContentPane().add(SignupNext);
        SignupNext.setBounds(360, 370, 90, 32);

        SignupSignup.setText("Signup");
        SignupSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignupSignupActionPerformed(evt);
            }
        });
        getContentPane().add(SignupSignup);
        SignupSignup.setBounds(470, 370, 90, 32);

        SignupExit.setText("Exit");
        SignupExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignupExitActionPerformed(evt);
            }
        });
        getContentPane().add(SignupExit);
        SignupExit.setBounds(580, 370, 90, 32);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/signup.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 680, 440);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SignupHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignupHomeActionPerformed
        noOfAttemps=1;
        new FirstPage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_SignupHomeActionPerformed

    private void SignupTxtCaptureKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SignupTxtCaptureKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_SignupTxtCaptureKeyPressed

    private void UserNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNameTxtActionPerformed

    private void PasswordTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTxtActionPerformed

    private void SignupTxtCaptureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignupTxtCaptureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SignupTxtCaptureActionPerformed

    private void SignupNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignupNextActionPerformed
        //System.out.println("in");
        
        if (isValidUserName()){
            if (isValidPassword()){
                if (isValidPhrase()){
                    SignupTxtCapture.setText(null);
                    user = new User(UserNameTxt.getText(),PasswordTxt.getText());
                    allPressingData.add(signupInitialPressData);
                    allReleasingData.add(signupInitialReleaseData);
                    //System.out.println("allpress"+allPressingData);
                    //System.out.println("allRelease"+allReleasingData);
                    
                    //System.out.println("attemps"+noOfAttemps);
                    
                    if (noOfAttemps==1){
                        ++noOfAttemps;
                        new SignUpPage(user);
                        this.setVisible(false);
                        System.out.println(user.getUserName());
                    }
                    else if(noOfAttemps<5) {
                        System.out.println(noOfAttemps);
                        ++noOfAttemps;
                        new SignUpPage(user);
                        this.setVisible(false);
                    }
                    if(noOfAttemps==5){
                        SignupNext.setEnabled(false);
                        SignupSignup.setEnabled(true);
                    }
                    else{
                        SignupSignup.setEnabled(false);
                    }
                }
                else{
                    JOptionPane.showMessageDialog(null, "Your entered phrase is not match for the given phrase","Error",JOptionPane.ERROR_MESSAGE);
                    new SignUpPage(user);
                    signupInitialPressData= new ArrayList(); 
                    signupInitialReleaseData= new ArrayList();
                    this.setVisible(false);
                    if (noOfAttemps==6){
                        noOfAttemps--;
                    }
                }
            }
            else {JOptionPane.showMessageDialog(null, "Invalid Password","Error",JOptionPane.ERROR_MESSAGE);
            new SignUpPage(user);
            signupInitialPressData= new ArrayList(); 
            signupInitialReleaseData= new ArrayList();
            this.setVisible(false);
            if (noOfAttemps==6){
                noOfAttemps--;
            }
            
            }
        }else{JOptionPane.showMessageDialog(null, "Invalid User Name","Error",JOptionPane.ERROR_MESSAGE);
            new SignUpPage(user);
            signupInitialPressData= new ArrayList(); 
            signupInitialReleaseData= new ArrayList();
            this.setVisible(false);
            if (noOfAttemps==6){
                noOfAttemps--;
            }
        }
       /*}
            else{
                JOptionPane.showMessageDialog(null, "User exists");
                new SignUpPage(user);
                this.setVisible(false);
            }*/
         
    }//GEN-LAST:event_SignupNextActionPerformed

    private void SignupExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignupExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SignupExitActionPerformed

    private void SignupSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignupSignupActionPerformed
        for (int i=0;i<allPressingData.size();i++){
            temporary = new ArrayList();
            for (int j=0;j<allPressingData.get(i).size()-1;j++){
                //Assume there  can not be zero delay between the key pressing
                if (allReleasingData.get(i).get(j).getReleasingTime()-allPressingData.get(i).get(j).getPressingTime()!=0){
                    temporary.add(allReleasingData.get(i).get(j).getReleasingTime()-allPressingData.get(i).get(j).getPressingTime());
                }
                if (allPressingData.get(i).get(j+1).getPressingTime()-allReleasingData.get(i).get(j).getReleasingTime()!=0){
                    temporary.add(allPressingData.get(i).get(j+1).getPressingTime()-allReleasingData.get(i).get(j).getReleasingTime());
                }
            } 
            temporary.add(allReleasingData.get(i).get(allReleasingData.get(i).size()-1).getReleasingTime()-allPressingData.get(i).get(allPressingData.get(i).size()-1).getPressingTime());
            latencies.add(temporary); 
            
        }
        for(int l =0;l<latencies.get(0).size();l++){
            double sumOfX=0;
            double sumOfSqureX=0;
            Digraph digraph = null;
            for (int k=0;k<latencies.size()-1;k++){
                sumOfX+=(Double.parseDouble(latencies.get(k).get(l).toString())) ;
                sumOfSqureX+=Math.pow(Double.parseDouble(latencies.get(k).get(l).toString()),2);
            }
            latenciesFinal.add(sumOfX/latencies.size());
            digraph = new Digraph(sumOfX/latencies.size(),sumOfX,sumOfSqureX,0);
            digraphCollection.add(digraph);   
        }     
        calcDeviation(digraphCollection,latencies.size());
        
        //Query to enter the user details to the sqlite DB
        try {     
            String insertUser = "insert into users (userName,password,meanValues,deviationValues) values (?,?,?,?)";
            PreparedStatement pst = connection.prepareStatement(insertUser);
            pst.setString(1,UserNameTxt.getText());
            pst.setString(2,PasswordTxt.getText());
            pst.setString(3,absorbDataFromDigraphCollectionToMean(digraphCollection));
            pst.setString(4,absorbDataFromDigraphCollectionToDeviation(digraphCollection));
            int rs = pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Successfully Signuped");
            pst.close();
            
        } catch (Exception e) {
            //Logger.getLogger(SignUpPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, e);
        }
        
    }//GEN-LAST:event_SignupSignupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        User user1 = null;
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpPage(user1).setVisible(true);
            }
            
        });
        
        
       
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField PasswordTxt;
    private javax.swing.JLabel SignUpAuthenticationLabel;
    private javax.swing.JLabel SignUpLabel;
    private javax.swing.JButton SignupExit;
    private javax.swing.JButton SignupHome;
    private javax.swing.JButton SignupNext;
    private javax.swing.JLabel SignupPasswordLabel;
    private javax.swing.JButton SignupSignup;
    private javax.swing.JTextField SignupTxtCapture;
    private javax.swing.JLabel SignupUserNameLabel;
    private javax.swing.JLabel Status;
    private javax.swing.JTextField UserNameTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
                  
    }

    @Override
    public void keyTyped(KeyEvent e) {
        
    }

    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode()!= 8 && e.getKeyCode()!=46){                    
            if (e.getSource() == this.SignupTxtCapture){
                keys keee = new keys (e.getKeyChar());
                keee.setPressingTime(e.getWhen());
                //signupInitialBothData.add(keee);
                signupInitialPressData.add(keee);
                System.out.println(keee+" "+e.getKeyChar()+"  press  "+e.getWhen());                               
            }
        }
        else if(e.getKeyCode()== 8 || e.getKeyCode()==46){
            JOptionPane.showMessageDialog(null, "Not valid");
            signupInitialPressData = new ArrayList();
            signupInitialReleaseData = new ArrayList();
            new SignUpPage(user);
            //signupInitialBothData= new ArrayList(); 
            
            this.setVisible(false);
            if (noOfAttemps==6){
                noOfAttemps--;
            }
        }      
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if (e.getSource()== this.SignupTxtCapture){
            keys keee = new keys (e.getKeyChar());
            keee.setReleasingTime(e.getWhen());
            //signupInitialBothData.add(keee);
            signupInitialReleaseData.add(keee);
            System.out.println(keee+" "+ e.getKeyChar()+"  release   "+e.getWhen());
        }
        
    }
    
    
    //Validations
    
    private boolean isValidUserName() {
        return this.UserNameTxt.getText() != null && this.UserNameTxt.getText().trim().length() != 0;
    }

    private boolean isValidPassword() {
        return this.PasswordTxt.getText() != null && this.PasswordTxt.getText().trim().length() != 0;
    }

    private boolean isValidPhrase() {
        return this.SignupTxtCapture.getText() != null && this.SignupTxtCapture.getText().trim().length() != 0 && this.SignupTxtCapture.getText().equals(this.SignUpAuthenticationLabel.getText());
    }
    
    private void calcDeviation(ArrayList<Digraph> digr,int length){
        for(int i=0;i<digr.size();i++){
            double tem = (+(digr.get(i).getSumOfSquareOfLatency()/length)-Math.pow((double)digr.get(i).getMeanLatency(), 2));           
            digr.get(i).setDeviation (Math.sqrt(tem));
        }
    }
    private String absorbDataFromDigraphCollectionToMean(ArrayList<Digraph> list){
        String median="";
        for(Digraph d : list){
            median+=Double.toString(d.getMeanLatency())+",";
        }
        return median;
    }
    private String absorbDataFromDigraphCollectionToDeviation(ArrayList<Digraph> list){
        String deviatiiion="";
        for(Digraph d : list){
            deviatiiion+=Double.toString(d.getDeviation())+",";
        }
        return deviatiiion;
    }
    
}